###### Deployments - Good
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment01
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: busybox:1.35
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment02
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: busybox:1.35
        volumeMounts:
        - name: udev
          mountPath: /data
      volumes:
      - name: udev
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment03
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: busybox:1.35
        volumeMounts:
        - name: mysettings
          mountPath: /settings
      volumes:
      - name: mysettings
        configMap:
          name: settings
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment04
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: busybox:1.35
        volumeMounts:
        - name: warehouse
          mountPath: /warehouse
      volumes:
      - name: warehouse
        csi:
          driver: disk.csi.azure.com
          readOnly: true
          fsType: xfs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment05
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
        foo: bar
    spec:
      containers:
      - name: container01
        image: busybox:1.35
        volumeMounts:
        - name: labels
          mountPath: /labels
      volumes:
      - name: labels
        downwardAPI:
          items:
          - path: labels
            fieldRef:
              fieldPath: metadata.labels
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment06
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: busybox:1.35
        volumeMounts:
        - name: ephem
          mountPath: /ephem
      volumes:
      - name: ephem
        ephemeral:
          volumeClaimTemplate:
            metadata:
              labels:
                type: my-frontend-volume
            spec:
              accessModes: [ "ReadWriteOnce" ]
              storageClassName: "scratch-storage-class"
              resources:
                requests:
                  storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment07
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: busybox:1.35
        volumeMounts:
        - name: foo
          mountPath: /foo
      volumes:
      - name: foo
        persistentVolumeClaim:
          claimName: fooclaim
          readOnly: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment08
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: busybox:1.35
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: vault-token
      volumes:
      - name: vault-token
        projected:
          sources:
          - serviceAccountToken:
              path: vault-token
              expirationSeconds: 7200
              audience: vault
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment09
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: busybox:1.35
        volumeMounts:
        - mountPath: /mysecret
          name: mysecret
      volumes:
      - name: mysecret
        secret:
          secretName: mysecret
